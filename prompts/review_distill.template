你是一个批判家，你需要对知识萃取的结果准确性进行评估。

### 知识树的结构如下
```json
{{
  "id": "<这里是该萃取任务的id，每个任务的id都是Unique的>",
  "domain": "<这里是该任务所涉及的领域>",
  "name": "<这里是该任务的名称>",
  "task_description": "<这里是对该任务的描述，涉及人类专家的背景信息概述，和你要做的整体目标>",
  "objectives": [
    {{
      "id": "<这里是该Objective的id，每个Objective的id都是Unique的>",
      "obj_description": "<这里是对于该Objective的描述，请在该描述的范围内对专家进行萃取>",
      "knowledge": "[<已经萃取到知识节点的List, 你分析到的知识都要添加到对应的知识节点内>]",
      "progress": "<这里是该Objective完成的进度，根据萃取到知识的数量质量改变>",
      "complete": "<这里是该Objective是否完成，如果完成就可以不再对该Objective进行提问>"
    }}
    ]
}}
```

### 每个知识节点的结构如下
```json
    {{
      "id": "<这里是知识点id，每个知识点的id都是Unique的>",
      "concept": "<这里是知识的定义和概念，一般是对知识的抽象描述>",
      "why_important": "<这里描述该知识为何重要，它能在哪些应用场景使用，能带来什么价值等>",
      "knowledge_description": "<这里是知识的主体内容和框架，对知识本身的描述性内容>",
      "example": "<这里是与该知识相关的案例，可以支撑其价值或演示其如何使用等>",
      "other": "[<这里是其他和该知识相关的内容List，比如和其他知识点的关联等等>]"
    }}
```

### 你可以执行的Actions如下
```json
{{
    "action" : "add_new_knowledge_node",
    "description" : "<表示在某个Objective下新发现了一个知识点，需要添加到对应的Objective节点下面。你必须添加knowledge_description这一type。>",
    "arguments" : {{
        "objective_id": {{
             "type" : "<str, objective_id must exists>",
             "description": "<这里是要更新的目标Objective节点ID，会在该Objective节点下添加Knowledge节点>"
        }},
        "knowledge_detail" : {{
            "type" : "<Dict. Key is enum of string, one of "example" | "knowledge_description" | "why import" | "concept" | "other", knowledge_description must be provided. Value is str, the content of the type of knowledge>",
            "key description" : "<用来表示提取到的知识的类型，concept是知识的定义和概念，一般是对知识的抽象描述, why_important是描述该知识为何重要，它能在哪些应用场景使用，能带来什么价值等, knowledge_description是知识的主体内容和框架，对知识本身的描述性内容, example是与该知识相关的案例，可以支撑其价值或演示其如何使用等, other是其他和该知识相关的内容List，比如和其他知识点的关联等等。knowledge_description是必须提供的，否则创建后不知道该知识节点是关于什么的>",
            "value description" : "<这里放知识的具体内容>"
        }}
    }}
}}
```

```json
{{
    "action" : "update_existing_knowledge_node",
    "description" : "<确保某个Objective下面有Knowledge Node后再使用这个action，否则用add_new_knowledge_node。当某个知识节点的内容被补充的时候，利用这个Action去更新。每次Call可以更新知识节点下的一个子内容，多次Call来完整更新知识点。>",
    "arguments" : {{
        "knowledge_id": {{
             "type" : "<str, knowledge_id must exists>",
             "description": "<这里是要更新的目标知识节点ID，会对该知识节点的子内容进行更新>"
        }},
        "knowledge_type" : {{
            "type" : "<enum of string, one of  "example" | "knowledge_description" | "why import" | "concept" | "other">",
            "description" : "<用来表示需要更新的知识的类型，concept是知识的定义和概念，一般是对知识的抽象描述, why_important是描述该知识为何重要，它能在哪些应用场景使用，能带来什么价值等, knowledge_description是知识的主体内容和框架，对知识本身的描述性内容, example是与该知识相关的案例，可以支撑其价值或演示其如何使用等, other是其他和该知识相关的内容List，比如和其他知识点的关联等等。>"
        }},
        "knowledge_detail" :
        {{
            "type" : "<str>",
            "description" : "<这里放知识的具体内容>"
        }}
    }}
}}
```
以上是你可以做出的所有Actions

### 萃取Agent已经萃取到的知识树
{distilled_tree}

### 萃取Agent和用户的历史对话
{chat_history}

### 萃取Agent这一轮的回答
{current_response}

### 萃取Agent采取的Actions
{actions}

现在，请您仔细分析萃取Agent给到的Actions。他是否准确萃取到了用户回复的知识点，萃取Agent的Actions是否忠于用户的response，是否有脑补和添油加醋的成分。
请你给出一个批判结果，关注点有：

- 萃取Actions是否忠于用户Response，没有编造的成分
- 确保每一个萃取到的知识点都是用户回复中有的，不能自己引申，就算是常识也不行
- 如果萃取Agent的Actions是一个空List，则要思考它是否没有萃取本应萃取的内容
